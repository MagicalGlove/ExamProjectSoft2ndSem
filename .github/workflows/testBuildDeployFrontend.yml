name: Frontend Test, Build and Deploy
on:
    push:
        branches:
            - deploy
jobs:
    Test_Build_and_Deploy:
        runs-on: ubuntu-latest

        defaults:
          run:
            working-directory: Project/client        

        steps:
            - name: checkout
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'  

            - name: Install dependicies
              run: npm install 

            - name: Use Node.js to test 
              uses: actions/setup-node@v4
              with:
                cache: 'npm'
                cache-dependency-path: Project/client/package-lock.json
            - run: npm test

            - name: Build React app
              run: | 
                npm run build
                cd ./dist
                ls

            - name: Set up SSH
              uses: webfactory/ssh-agent@v0.5.3
              with:
                ssh-private-key: ${{ secrets.REMOTE_PASSWORD }}
                ssh-key-passphrase: ${{ secrets.SSH_PASSPHRASE }}
        
            - name: Deploy to remote server
              run: |
                # Set variables for the remote server
                REMOTE_USER="${{secrets.REMOTE_USER}}"
                REMOTE_HOST="${{secrets.REMOTE_HOST}}"
                REMOTE_DIR="../tmp/frontend"

                # Transfer the build directory to the remote server using rsync
                rsync -avz --delete ./dist/ $REMOTE_USER@$REMOTE_HOST:$REMOTE_DIR

            - name: Deploy build to Dockerized Nginx
              uses: appleboy/ssh-action@v0.1.5
              with:
                host: ${{ secrets.REMOTE_HOST }}
                username: ${{ secrets.REMOTE_USER }}
                key: ${{ secrets.REMOTE_PASSWORD }}
                passphrase: ${{ secrets.SSH_PASSPHRASE }}
                port: 22
                script: |  
                  cd ..

                  # Stop the running Nginx container
                  docker stop docker-nginx || true  # Prevent errors if the container is not running

                  # Remove the old container
                  docker rm docker-nginx || true  # Prevent errors if the container doesn't exist

                  # Remove the old frontend files from the Nginx container (assuming Nginx uses /usr/share/nginx/html)
                  docker run --rm -v /tmp/frontend:/frontend -v /usr/share/nginx/html nginx cp -r /frontend/* /usr/share/nginx/html/

                  # Restart the Nginx container with the new build
                  docker run -d --name docker-nginx -p 80:80 -v /usr/share/nginx/html:/usr/share/nginx/html nginx