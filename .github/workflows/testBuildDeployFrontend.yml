name: Frontend Test, Build and Deploy
on:
    push:
        branches:
            - deploy
jobs:
  Backend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Project/api        

    steps:
        - name: checkout
          uses: actions/checkout@v2
        
        - name: Use Node.js to test 
          uses: actions/setup-node@v4
          with:
            node-version: '20.x'
            cache: 'npm'
            cache-dependency-path: Project/api/package-lock.json
        - run: npm install
        - run: npm test

        - name: Build Docker image
          run: |
            docker build -t backendapp:${{ github.sha }} .  

        - name: List Docker Images
          run: docker images
          
        # Save the Docker image as a tarball file
        - name: Save Docker image to tarball
          run: |
            docker save backendapp:${{ github.sha }} -o backendapp-${{ github.sha }}.tar
            chmod 664 backendapp-${{ github.sha }}.tar
             
        - name: Copy Docker image to remote server
          uses: appleboy/scp-action@v0.1.7
          with:
            host: ${{ secrets.REMOTE_HOST }}
            username: ${{ secrets.REMOTE_USER }}
            key: ${{ secrets.REMOTE_PASSWORD }}
            passphrase: ${{ secrets.SSH_PASSPHRASE }}
            port: 22
            source: "/home/runner/work/ExamProjectSoft2ndSem/ExamProjectSoft2ndSem/Project/api/backendapp-${{ github.sha }}.tar"
            target: "../app"
            timeout: "300s"
            proxy_timeout: "300s"    

        - name: Deploy Docker image on remote server
          uses: appleboy/ssh-action@v0.1.5
          with:
            host: ${{ secrets.REMOTE_HOST }}
            username: ${{ secrets.REMOTE_USER }}
            key: ${{ secrets.REMOTE_PASSWORD }}
            passphrase: ${{ secrets.SSH_PASSPHRASE }}
            port: 22
            script: |
              cd ../app/github/workspace/Project/api
              
              ls -lh backendapp-${{ github.sha }}.tar

              # Load the Docker image from the tarball
              docker load -i backendapp-${{ github.sha }}.tar

              docker build -t backendapp:${{ github.sha }}

              # Stop and remove any running container (optional)
              docker stop backendapp || true
              docker rm backendapp || true

              # Run the new container
              docker run -it -d --name backendapp -p 3001:3001 backendapp:${{ github.sha }}    

              docker start backendapp

  Frontend:
    needs: Backend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Project/client        

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  

      - name: Install dependicies
        run: npm install 

      - name: Use Node.js to test 
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
          cache-dependency-path: Project/client/package-lock.json
      - run: npm test

      - name: Build React app
        run: | 
          npm run build
          ls
          ls -la dist

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build Docker image for Nginx to serve the React app
      - name: Build Docker image
        run: |
          docker build -t frontendapp ./ # Make sure you have a Dockerfile in the root
          cd ./dist
          ls

      # Save the Docker image as a tarball file
      - name: Save Docker image to tarball
        run: |
          docker save frontendapp:${{ github.sha }} -o frontendapp-${{ github.sha }}.tar
          cd ..
          find ./ -name frontendapp-${{ github.sha }}.tar
          
      - name: Copy Docker image to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PASSWORD }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: 22
          source: "/home/runner/work/ExamProjectSoft2ndSem/ExamProjectSoft2ndSem/Project/client/frontendapp-${{ github.sha }}.tar"
          target: "../frontend"
          timeout: "300s"
          proxy_timeout: "300s"       

      - name: Deploy Docker image on remote server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PASSWORD }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: 22
          script: |
            cd ..

            find ./ -name frontendapp-${{ github.sha }}.tar

            cd ../app/github/workspace/Project/client
            
            ls -lh frontendapp-${{ github.sha }}.tar

            # Load the Docker image from the tarball
            docker load -i frontendapp-${{ github.sha }}.tar

            docker build -t frontendapp:${{ github.sha }}

            # Stop and remove any running container (optional)
            docker stop frontendapp || true
            docker rm frontendapp || true

            # Run the new container
            docker run -it -d --name frontendapp -p 3001:3001 frontendapp:${{ github.sha }}    

            docker start frontendapp