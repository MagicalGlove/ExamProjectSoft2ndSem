name: Frontend Test, Build and Deploy
on:
    push:
        branches:
            - deploy
jobs:
    Test_Build_and_Deploy:
        runs-on: ubuntu-latest

        defaults:
          run:
            working-directory: Project/client        

        steps:
            - name: checkout
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'  

            - name: Install dependicies
              run: npm install 

            - name: Use Node.js to test 
              uses: actions/setup-node@v4
              with:
                cache: 'npm'
                cache-dependency-path: Project/client/package-lock.json
            - run: npm test

            - name: Build React app
              run: | 
                npm run build
                ls -la build

            # Set up Docker
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            # Build Docker image for Nginx to serve the React app
            - name: Build Docker image
              run: |
                docker build -t frontendapp ./ # Make sure you have a Dockerfile in the root
                ls

            # Copy the private key and passphrase for SSH access
            - name: Set up SSH
              run: |
                mkdir -p ~/.ssh
                echo "${{ secrets.REMOTE_PASSWORD }}" > ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa
                echo "Host *" >> ~/.ssh/config
                echo "  StrictHostKeyChecking no" >> ~/.ssh/config

            # Deploy Docker image to the remote server using SSH
            - name: Deploy to remote server
              env:
                SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}  # The passphrase for your SSH private key
              run: |
                # Start SSH agent and add the private key
                eval $(ssh-agent -s)
                ssh-add ~/.ssh/id_rsa <<< "${SSH_PASSPHRASE}"
  
                # SSH command to deploy the Docker container
                ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST}} << 'EOF'
                  # Pull the latest Docker image (if using DockerHub)
                  docker pull frontendapp:latest

                  # Stop and remove the old container if it's running
                  docker stop react-app || true
                  docker rm react-app || true

                  # Run the new container
                  docker run -d -p 80:80 --name react-app frontendapp:latest

                  # Optionally: clean up unused Docker images
                  docker image prune -af
                EOF