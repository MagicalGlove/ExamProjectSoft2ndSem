name: Backend Test, Build and Deploy
on:
    push:
        branches:
            - deploy
jobs:
    Test_Build_and_Deploy:
        runs-on: ubuntu-latest

        defaults:
          run:
            working-directory: Project/api        

        steps:
            - name: checkout
              uses: actions/checkout@v2
            
            - name: Use Node.js to test 
              uses: actions/setup-node@v4
              with:
                node-version: '20.x'
                cache: 'npm'
                cache-dependency-path: Project/api/package-lock.json
            - run: npm install
            - run: npm test

            - name: Build Docker image
              run: |
                docker build -t backendapp:${{ github.sha }} .  

            - name: List Docker Images
              run: docker images
              
            - name: Save Docker image to tarball
              run: |
                docker save backendapp:${{ github.sha }} -o backendapp-${{ github.sha }}.tar
                ls -lh backendapp-${{ github.sha }}.tar 
                
            - name: Copy Docker image to remote server
              uses: appleboy/scp-action@v0.1.0
              with:
                host: ${{ secrets.REMOTE_HOST }}
                username: ${{ secrets.REMOTE_USER }}
                key: ${{ secrets.REMOTE_PASSWORD }}
                passphrase: "ftu58fqs"
                port: 22
                source: "backendapp-${{ github.sha }}.tar"
                target: "~/app/backendapp-${{ github.sha }}.tar"      
                debug: true

            - name: Deploy Docker image on remote server
              uses: appleboy/ssh-action@v0.1.5
              with:
                host: ${{ secrets.REMOTE_HOST }}
                username: ${{ secrets.REMOTE_USER }}
                password: ${{ secrets.REMOTE_PASSWORD }}
                port: 22
                script: |
                  # Load the Docker image from the tarball
                  docker load -i /home/app/backendapp-${{ github.sha }}.tar
            
                  # Stop and remove any running container (optional)
                  docker stop backendapp || true
                  docker rm backendapp || true

                  # Run the new container
                  docker run -d --name backendapp -p 3001:3001 backendapp:${{ github.sha }}    