name: Backend Test, Build and Deploy
on:
    push:
        branches:
            - deploy
jobs:
    Test_Build_and_Deploy:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: ['18.x','20.x']

        defaults:
          run:
            working-directory: Project/api        

        steps:
            - name: checkout
              uses: actions/checkout@v2
            
            - name: Use Node.js ${{ matrix.node-version}} to test 
              uses: actions/setup-node@v4
              with:
                node-version: ${{matrix.node-version}}
                cache: 'npm'
                cache-dependency-path: Project/api/package-lock.json
            - run: npm install
            - run: npm test

            - name: Build Docker image
              run: |
                docker build -t backendApp:${{ github.sha }}
            
            - name: Save Docker image to tarball
              run: | 
                docker save backendApp:${{ github.sha }} -o backendApp-${{ github.sha }}.tar
                
            - name: Copy Docker image to remote server
              uses: appleboy/scp-action@v0.1.0
              with:
                host: ${{ secrets.REMOTE_HOST }}
                username: ${{ secrets.REMOTE_USER }}
                password: ${{ secrets.REMOTE_PASSWORD }}
                port: 22
                source: "backendApp-${{ github.sha }}.tar"
                target: "/tmp/backendApp-${{ github.sha }}.tar"    

            - name: Deploy Docker image on remote server
              uses: appleboy/ssh-action@v0.1.5
              with:
                host: ${{ secrets.REMOTE_HOST }}
                username: ${{ secrets.REMOTE_USER }}
                password: ${{ secrets.REMOTE_PASSWORD }}
                port: 22
                script: |
                  # Load the Docker image from the tarball
                  docker load -i /tmp/backendApp-${{ github.sha }}.tar
            
                  # Stop and remove any running container (optional)
                  docker stop backendApp || true
                  docker rm backendApp || true

                  # Run the new container
                  docker run -d --name backendApp -p 80:80 backendApp:${{ github.sha }}    