name: Create Branch on Issue Status Update

on:
  project_card:
    types:
      - moved

jobs:
  create-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get project card details
        id: get_project_card
        run: |
          # Get the project card details from the event payload
          echo "PROJECT_CARD_URL=${{ github.event.project_card.url }}" >> $GITHUB_ENV
          echo "ISSUE_URL=${{ github.event.project_card.content_url }}" >> $GITHUB_ENV

      - name: Check if project card moved to 'In Progress'
        id: check_column
        run: |
          # Fetch project card details using GitHub API
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               ${{ env.PROJECT_CARD_URL }} > card_details.json

          # Extract column name from the response
          column_name=$(jq -r '.column_name' card_details.json)
          echo "Column: $column_name"

          # Check if the card was moved to 'In Progress'
          if [[ "$column_name" == "In Progress" ]]; then
            echo "This issue is now 'In Progress'. Proceeding to create a branch."
            echo "create_branch=true" >> $GITHUB_ENV
          else
            echo "Column is not 'In Progress'. Skipping branch creation."
            echo "create_branch=false" >> $GITHUB_ENV
          fi

      - name: Create a new branch if it doesn't exist
        if: env.create_branch == 'true'
        run: |
          # Get the issue details using the issue URL
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               ${{ env.ISSUE_URL }} > issue_details.json

          # Extract the issue title and sanitize to create a branch name
          issue_title=$(jq -r '.title' issue_details.json)
          branch_name=$(echo "issue-${issue_title}" | sed 's/[^a-zA-Z0-9]/-/g')

          echo "Branch name: $branch_name"

          # Check if the branch already exists
          existing_branch=$(git branch -r | grep "origin/$branch_name")

          if [[ -z "$existing_branch" ]]; then
            echo "Branch does not exist. Creating branch: $branch_name"
            # Create the branch from the main branch
            git checkout -b $branch_name
            git push origin $branch_name
          else
            echo "Branch $branch_name already exists. Skipping branch creation."
          fi
