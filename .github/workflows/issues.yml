name: Create Branch on Issue Status Update

on:
  issues:
    types:
      - edited
      - opened

jobs:
  create-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get issue details
        id: get_issue
        run: |
          ISSUE_URL="${{ github.event.issue.url }}"
          echo "ISSUE_URL=${ISSUE_URL}" >> $GITHUB_ENV

      - name: Check if issue is in 'In Progress' column
        id: check_in_progress
        run: |
          # Set the project board ID and 'In Progress' column name
          PROJECT_ID="<YOUR_PROJECT_ID>"  # Replace with your project ID
          IN_PROGRESS_COLUMN="In Progress"  # Replace with your actual column name

          # Fetch project cards for the given project board
          project_cards=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                              -H "Accept: application/vnd.github.v3+json" \
                              "https://api.github.com/projects/${PROJECT_ID}/columns")

          # Loop through each column to find the 'In Progress' column
          column_id=$(echo "$project_cards" | jq -r ".[] | select(.name == \"$IN_PROGRESS_COLUMN\") | .id")
          echo "In Progress Column ID: $column_id"

          # Check if issue is in 'In Progress'
          issue_cards=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                              -H "Accept: application/vnd.github.v3+json" \
                              "https://api.github.com/issues/${{ github.event.issue.number }}/projects")

          # Check if the issue is assigned to the 'In Progress' column
          in_progress=$(echo "$issue_cards" | jq -r "select(.[] | .column_url == \"https://api.github.com/projects/columns/${column_id}\")")

          if [[ -n "$in_progress" ]]; then
            echo "Issue is in 'In Progress' column."
            echo "create_branch=true" >> $GITHUB_ENV
          else
            echo "Issue is not in 'In Progress'. Skipping branch creation."
            echo "create_branch=false" >> $GITHUB_ENV

      - name: Create a new branch if it doesn't exist
        if: env.create_branch == 'true'
        run: |
          # Get the issue details using the issue URL
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               ${{ env.ISSUE_URL }} > issue_details.json

          # Extract the issue title and sanitize to create a branch name
          issue_title=$(jq -r '.title' issue_details.json)
          branch_name="issue-${issue_title}"  # Customize branch naming convention
          branch_name=$(echo $branch_name | sed 's/[^a-zA-Z0-9]/-/g')

          echo "Branch name: $branch_name"

          # Check if the branch already exists
          existing_branch=$(git branch -r | grep "origin/$branch_name")

          if [[ -z "$existing_branch" ]]; then
            echo "Branch does not exist. Creating branch: $branch_name"
            # Create the branch from the main branch
            git checkout -b $branch_name
            git push origin $branch_name
          else
            echo "Branch $branch_name already exists. Skipping branch creation."
          fi
