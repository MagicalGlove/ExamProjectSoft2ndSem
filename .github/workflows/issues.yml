name: Create Branch on Issue Status Update

on:
  issues:
    types:
      - opened
      - edited
      - labeled

jobs:
  create-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get Issue Details
        id: issue_details
        run: |
          # Get the issue title and project associations
          echo "ISSUE_URL=${{ github.event.issue.url }}" >> $GITHUB_ENV
          echo "ISSUE_TITLE=${{ github.event.issue.title }}" >> $GITHUB_ENV
          echo "ISSUE_ID=${{ github.event.issue.id }}" >> $GITHUB_ENV

      - name: Get Project Cards for the Issue
        id: project_cards
        run: |
          # Fetch project cards linked to the issue using GitHub API
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/issues/${{ github.event.issue.number }}/projects")

          echo "Response: $response"
          
          # Store the response (projects) in an output variable
          echo "::set-output name=project_cards::$response"

      - name: Check if Issue is in "In Progress" column
        id: check_in_progress
        run: |
          # Parse project card response to check if issue is in "In Progress" column
          project_cards="${{ steps.project_cards.outputs.project_cards }}"
          
          # Check if project card is in the "In Progress" column
          in_progress_column=$(echo "$project_cards" | jq -r '.[] | select(.column_name == "In Progress") | .column_name')

          if [[ "$in_progress_column" == "In Progress" ]]; then
            echo "This issue is in the 'In Progress' column."
            echo "create_branch=true" >> $GITHUB_ENV
          else
            echo "Issue is not in 'In Progress' column. Skipping branch creation."
            echo "create_branch=false" >> $GITHUB_ENV

      - name: Create Branch if it doesn't exist
        if: env.create_branch == 'true'
        run: |
          # Sanitize the issue title to create a valid branch name
          branch_name=$(echo "issue-${{ env.ISSUE_TITLE }}" | sed 's/[^a-zA-Z0-9]/-/g')
          echo "Branch name: $branch_name"

          # Check if the branch already exists
          existing_branch=$(git branch -r | grep "origin/$branch_name")

          if [[ -z "$existing_branch" ]]; then
            echo "Branch does not exist. Creating branch: $branch_name"
            # Create the branch from the main branch
            git checkout -b $branch_name
            git push origin $branch_name
          else
            echo "Branch $branch_name already exists. Skipping branch creation."
