services:
  api:
    build: ./api
    ports:
      - "3001:3001"
    depends_on:
      - grafana
      - prometheus
      - kafka
    networks:
      - monitoring

  client:
    build: ./client
    ports:
      - "5173:5173"
    networks:
     - monitoring      

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./api/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./api/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    networks:
      - monitoring

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - monitoring
    command: >
      sh -c "
        /etc/confluent/docker/run &
        sleep 10 &&
        kafka-topics --create --topic restaurant_topic --bootstrap-server kafka:9092 --replication-factor 1 --partitions 3 &&
        kafka-topics --create --topic my-topic --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 && 
        kafka-topics --create --topic test-topic --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 &&
        kafka-topics --create --topic user-topic --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 &&
        sleep infinity
      "

  prometheus:
    image: prom/prometheus
    volumes:
      - ./api/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

networks:
  monitoring:
    name: monitoring